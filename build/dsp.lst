ARM GAS  /tmp/ccD1zlF2.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"dsp.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN7HistoryC2Ev,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN7HistoryC2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN7HistoryC2Ev:
  27              	.LVL0:
  28              	.LFB1444:
  29              		.file 1 "ImpulseResponse/dsp.cpp"
   1:ImpulseResponse/dsp.cpp **** /*
   2:ImpulseResponse/dsp.cpp ****  * File: dsp.cpp
   3:ImpulseResponse/dsp.cpp ****  * Created Date: March 17, 2023
   4:ImpulseResponse/dsp.cpp ****  * Author: Steven Atkinson (steven@atkinson.mn)
   5:ImpulseResponse/dsp.cpp ****  */
   6:ImpulseResponse/dsp.cpp **** //  Modified by Keith Bloemer on 12/28/23
   7:ImpulseResponse/dsp.cpp **** //    Greatly simplified by assuming 1 channel, 1 input per Process call, and constant samplerate.
   8:ImpulseResponse/dsp.cpp **** //    For initial investigation into running IR's on the Daisy Seed
   9:ImpulseResponse/dsp.cpp **** 
  10:ImpulseResponse/dsp.cpp **** #include "dsp.h"
  11:ImpulseResponse/dsp.cpp **** 
  12:ImpulseResponse/dsp.cpp **** 
  13:ImpulseResponse/dsp.cpp **** History::History()
  30              		.loc 1 13 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB118:
  36              	.LBB119:
  37              	.LBB120:
  38              	.LBB121:
  39              	.LBB122:
  40              	.LBB123:
  41              		.file 2 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/
   1:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
   3:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** //
ARM GAS  /tmp/ccD1zlF2.s 			page 2


   5:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // any later version.
  10:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  11:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  16:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  20:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  25:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** /*
  26:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  *
  27:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  *
  30:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  *
  38:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  *
  39:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  *
  42:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  */
  50:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  51:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****  */
  55:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  56:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  59:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #include <bits/concept_check.h>
ARM GAS  /tmp/ccD1zlF2.s 			page 3


  62:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #include <initializer_list>
  64:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
  65:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus > 201703L
  66:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** # include <compare>
  67:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
  68:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  69:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #include <debug/assertions.h>
  70:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  71:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** extern "C" void
  73:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 					  const void*, const void*);
  75:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
  76:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  77:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** {
  79:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  82:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     struct _Vector_base
  85:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     {
  86:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        	pointer;
  90:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  91:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       struct _Vector_impl_data
  92:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
  93:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	pointer _M_start;
  94:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	pointer _M_finish;
  95:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  96:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
  97:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  42              		.loc 2 98 47 is_stmt 0 view .LVU1
  43 0000 0022     		movs	r2, #0
  44              	.LVL1:
  45              		.loc 2 98 47 view .LVU2
  46              	.LBE123:
  47              	.LBE122:
  48              	.LBE121:
  49              	.LBE120:
  50              	.LBI119:
  99:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{ }
 100:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 101:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 102:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 107:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 108:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	void
 109:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccD1zlF2.s 			page 4


 110:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{
 111:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_start = __x._M_start;
 112:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	}
 115:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 116:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	void
 117:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{
 119:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  // information used by TBAA.
 121:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_copy_data(__x);
 124:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	}
 126:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       };
 127:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 128:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       struct _Vector_impl
 129:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 131:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type()
 134:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{ }
 135:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 136:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{ }
 139:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 140:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 141:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{ }
 146:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 147:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{ }
 150:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 151:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{ }
 154:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 155:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 156:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  struct _Asan
 159:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  {
 160:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      ::size_type size_type;
 162:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 163:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 166:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
ARM GAS  /tmp/ccD1zlF2.s 			page 5


 167:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 168:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    struct _Grow
 169:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    {
 170:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      void _M_grew(size_type) { }
 172:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    };
 173:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  };
 174:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 175:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	template<typename _Up>
 177:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  {
 179:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      ::size_type size_type;
 181:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 182:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    static void
 185:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    {
 187:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    }
 190:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 191:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    static void
 192:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 195:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    static void
 196:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 199:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    static void
 200:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    {
 202:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      if (__impl._M_start)
 203:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    }
 205:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 206:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    struct _Reinit
 208:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    {
 209:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      {
 211:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      }
 214:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 215:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      ~_Reinit()
 216:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      {
 217:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		if (_M_impl._M_start)
 219:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 			    _M_impl._M_finish);
 221:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      }
 222:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 223:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
ARM GAS  /tmp/ccD1zlF2.s 			page 6


 224:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 225:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 226:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 229:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    };
 230:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 231:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    struct _Grow
 233:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    {
 234:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 238:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 240:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 242:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 243:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 246:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    private:
 247:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      size_type _M_n;
 249:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    };
 250:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  };
 251:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 252:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       };
 271:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 272:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     public:
 273:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 274:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 275:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _Tp_alloc_type&
 276:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 278:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 279:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       const _Tp_alloc_type&
 280:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccD1zlF2.s 			page 7


 281:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 282:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 283:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       allocator_type
 284:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 287:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 288:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _Vector_base() = default;
 289:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #else
 290:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _Vector_base() { }
 291:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 292:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 293:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 295:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 296:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       // Kept for ABI compatibility.
 297:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _Vector_base(size_t __n)
 299:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _M_impl()
 300:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { _M_create_storage(__n); }
 301:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 302:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 303:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _M_impl(__a)
 305:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { _M_create_storage(__n); }
 306:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 307:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 308:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 310:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       // Kept for ABI compatibility.
 311:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 315:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _M_impl(__a)
 317:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 318:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	else
 321:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  {
 322:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    _M_create_storage(__n);
 324:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  }
 325:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 326:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** # endif
 327:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 328:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { }
 331:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 332:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 333:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 335:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
ARM GAS  /tmp/ccD1zlF2.s 			page 8


 338:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 339:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     public:
 340:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _Vector_impl _M_impl;
 341:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 342:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       pointer
 343:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _M_allocate(size_t __n)
 344:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 345:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 348:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 349:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       void
 350:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 352:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	if (__p)
 354:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 356:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 357:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     protected:
 358:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       void
 359:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 360:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 361:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 365:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     };
 366:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 367:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****   /**
 368:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  individual elements in any order.
 370:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *
 371:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  @ingroup sequences
 372:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *
 373:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *
 376:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *
 382:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 387:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****   */
 388:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     {
 391:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       // Concept requirements.
 393:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** # if __cplusplus < 201103L
ARM GAS  /tmp/ccD1zlF2.s 			page 9


 395:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** # endif
 397:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 399:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 400:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 401:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** # endif
 407:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 408:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 409:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 413:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     public:
 414:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef _Tp					value_type;
 415:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       const_iterator;
 422:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef size_t					size_type;
 425:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       typedef _Alloc					allocator_type;
 427:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 428:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     private:
 429:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 430:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       static constexpr bool
 431:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 433:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 					  std::declval<pointer>(),
 435:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 					  std::declval<pointer>(),
 436:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 438:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 439:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       static constexpr bool
 440:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return false; }
 442:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 443:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       static constexpr bool
 444:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _S_use_relocate()
 445:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 446:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 451:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
ARM GAS  /tmp/ccD1zlF2.s 			page 10


 452:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       static pointer
 453:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 456:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 458:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 459:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       static pointer
 460:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return __result; }
 463:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 464:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       static pointer
 465:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 468:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 471:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif // C++11
 472:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 473:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     protected:
 474:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       using _Base::_M_allocate;
 475:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       using _Base::_M_deallocate;
 476:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       using _Base::_M_impl;
 477:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 479:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     public:
 480:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 483:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 484:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 486:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 487:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector() = default;
  51              		.loc 2 487 7 is_stmt 1 view .LVU3
  52              	.LBB129:
  53              	.LBI120:
 288:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #else
  54              		.loc 2 288 7 view .LVU4
  55              	.LBB128:
  56              	.LBI121:
 131:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
  57              		.loc 2 131 2 view .LVU5
  58              	.LBB125:
  59              	.LBI125:
  60              		.file 3 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/
   1:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
   3:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** //
   5:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // any later version.
ARM GAS  /tmp/ccD1zlF2.s 			page 11


  10:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  11:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // GNU General Public License for more details.
  15:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  16:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  20:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  25:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** /*
  26:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  *
  29:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  */
  37:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  38:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** /** @file bits/allocator.h
  39:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****  */
  42:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  43:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  46:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #include <type_traits>
  50:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #endif
  51:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  52:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  54:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** {
  56:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  58:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****   /**
  59:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****    *  @addtogroup allocators
  60:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****    *  @{
  61:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****    */
  62:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  63:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****   /// allocator<void> specialization.
  64:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****   template<>
  65:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****     class allocator<void>
  66:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****     {
ARM GAS  /tmp/ccD1zlF2.s 			page 12


  67:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****     public:
  68:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef void        value_type;
  69:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef size_t      size_type;
  70:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  71:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #if __cplusplus <= 201703L
  72:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef void*       pointer;
  73:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef const void* const_pointer;
  74:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  75:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       template<typename _Tp1>
  76:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	struct rebind
  77:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #else
  79:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       allocator() = default;
  80:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  81:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       template<typename _Up>
  82:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	constexpr
  83:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #endif // ! C++20
  85:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  86:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  91:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef true_type is_always_equal;
  92:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  93:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       template<typename _Up, typename... _Args>
  94:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	void
  95:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
  99:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       template<typename _Up>
 100:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	void
 101:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	destroy(_Up* __p)
 102:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	{ __p->~_Up(); }
 104:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #endif // C++11 to C++17
 105:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****     };
 106:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
 107:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****   /**
 108:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****    *
 110:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****    *  for further details.
 112:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****    *
 113:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****    */
 115:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****   template<typename _Tp>
 116:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****     {
 118:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****     public:
 119:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef _Tp        value_type;
 120:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef size_t     size_type;
 121:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 122:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #if __cplusplus <= 201703L
 123:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef _Tp*       pointer;
ARM GAS  /tmp/ccD1zlF2.s 			page 13


 124:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef const _Tp* const_pointer;
 125:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef _Tp&       reference;
 126:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef const _Tp& const_reference;
 127:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
 128:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       template<typename _Tp1>
 129:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	struct rebind
 130:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #endif
 132:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
 133:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #if __cplusplus >= 201103L
 134:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
 138:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       typedef true_type is_always_equal;
 139:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #endif
 140:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
 141:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
  61              		.loc 3 144 7 view .LVU6
  62              	.LBB126:
  63              	.LBI126:
  64              		.file 4 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/n
   1:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
   3:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** //
   5:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // any later version.
  10:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  11:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  16:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  20:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  25:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****  */
  28:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  29:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  32:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #include <bits/c++config.h>
ARM GAS  /tmp/ccD1zlF2.s 			page 14


  33:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #include <new>
  34:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #include <bits/move.h>
  36:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #include <type_traits>
  38:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #endif
  39:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  40:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** {
  42:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  44:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****   /**
  45:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****    *  @ingroup allocators
  47:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****    *
  48:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****    *    - all allocation calls operator new
  50:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  51:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****    *
  52:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****    */
  54:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****   template<typename _Tp>
  55:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****     class new_allocator
  56:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****     {
  57:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****     public:
  58:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       typedef _Tp        value_type;
  59:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       typedef std::size_t     size_type;
  60:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #if __cplusplus <= 201703L
  62:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       typedef _Tp*       pointer;
  63:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  64:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       typedef _Tp&       reference;
  65:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  66:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  67:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       template<typename _Tp1>
  68:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	struct rebind
  69:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #endif
  71:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  72:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  73:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #endif
  77:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  78:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  65              		.loc 4 79 7 view .LVU7
  66              		.loc 4 79 7 is_stmt 0 view .LVU8
  67              	.LBE126:
  68              	.LBE125:
  69              	.LBB127:
  70              	.LBI122:
  97:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  71              		.loc 2 97 2 is_stmt 1 view .LVU9
  72              	.LBB124:
  98:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{ }
ARM GAS  /tmp/ccD1zlF2.s 			page 15


  73              		.loc 2 98 47 is_stmt 0 view .LVU10
  74 0002 C0E90022 		strd	r2, r2, [r0]
  75              	.LBE124:
  76              	.LBE127:
  77              	.LBE128:
  78              	.LBE129:
  79              	.LBE119:
  80              		.loc 1 13 18 view .LVU11
  81 0006 C0E90222 		strd	r2, r2, [r0, #8]
  82 000a 0261     		str	r2, [r0, #16]
  83              	.LBE118:
  14:ImpulseResponse/dsp.cpp **** {
  15:ImpulseResponse/dsp.cpp **** }
  84              		.loc 1 15 1 view .LVU12
  85 000c 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1444:
  89              		.global	_ZN7HistoryC1Ev
  90              		.thumb_set _ZN7HistoryC1Ev,_ZN7HistoryC2Ev
  91 000e 00BF     		.section	.text._ZN7HistoryD2Ev,"ax",%progbits
  92              		.align	1
  93              		.p2align 2,,3
  94              		.global	_ZN7HistoryD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7HistoryD2Ev:
 101              	.LVL2:
 102              	.LFB1447:
  16:ImpulseResponse/dsp.cpp **** 
  17:ImpulseResponse/dsp.cpp **** // Destructor
  18:ImpulseResponse/dsp.cpp **** History::~History()
 103              		.loc 1 18 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		.loc 1 18 1 is_stmt 0 view .LVU14
 108 0000 10B5     		push	{r4, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 4, -8
 111              		.cfi_offset 14, -4
 112              		.loc 1 18 1 view .LVU15
 113 0002 0446     		mov	r4, r0
 114              	.LVL3:
 115              	.LBB130:
 116              	.LBI130:
 488:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #else
 489:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector() { }
 490:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 491:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 492:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 493:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 495:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 496:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       explicit
 497:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccD1zlF2.s 			page 16


 498:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _Base(__a) { }
 499:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 500:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 501:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 502:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 505:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 506:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  constructed elements.
 508:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 509:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       explicit
 510:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 513:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 514:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 515:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 518:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 519:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 520:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 522:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #else
 527:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 528:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 531:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 532:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 533:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 535:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       explicit
 536:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 541:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 542:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 543:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 546:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @a __x  will not be copied
 548:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 550:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 553:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector(const vector& __x)
 554:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _Base(__x.size(),
ARM GAS  /tmp/ccD1zlF2.s 			page 17


 555:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 557:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 558:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 560:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 561:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 562:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 563:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 564:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 565:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 566:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 567:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  moved instance.
 569:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  %vector.
 571:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 572:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector(vector&&) noexcept = default;
 573:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 574:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 575:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 577:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 578:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 579:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 581:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 582:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 583:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 584:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     private:
 585:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { }
 588:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 589:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _Base(__m)
 591:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 592:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	else if (!__rv.empty())
 595:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  {
 596:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 598:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 600:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 601:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	    __rv.clear();
 602:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  }
 603:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 604:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 605:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****     public:
 606:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 607:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       noexcept( noexcept(
 609:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
ARM GAS  /tmp/ccD1zlF2.s 			page 18


 612:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { }
 613:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 614:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 615:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 617:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 618:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 619:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  initializer_list @a __l.
 621:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 622:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 625:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       : _Base(__a)
 628:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 629:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 631:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 632:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 633:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 634:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 635:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 637:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 638:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 639:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 640:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  [first,last).
 642:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 643:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 650:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 651:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       template<typename _InputIterator,
 652:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: _Base(__a)
 656:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{
 657:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 			      std::__iterator_category(__first));
 659:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	}
 660:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #else
 661:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       template<typename _InputIterator>
 662:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: _Base(__a)
 665:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{
 666:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
ARM GAS  /tmp/ccD1zlF2.s 			page 19


 669:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	}
 670:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 671:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 672:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 673:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  responsibility.
 677:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 678:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 117              		.loc 2 678 7 is_stmt 1 view .LVU16
 118              	.LBB131:
 679:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 680:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 119              		.loc 2 680 15 is_stmt 0 view .LVU17
 120 0004 0068     		ldr	r0, [r0]
 121              	.LVL4:
 122              	.LBB132:
 123              	.LBI132:
 276:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 124              		.loc 2 276 7 is_stmt 1 view .LVU18
 276:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 125              		.loc 2 276 7 is_stmt 0 view .LVU19
 126              	.LBE132:
 127              	.LBB133:
 128              	.LBI133:
 129              		.file 5 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/
   1:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
   3:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** //
   5:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // any later version.
  10:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  11:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  16:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  20:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  25:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****  */
  29:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  30:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
ARM GAS  /tmp/ccD1zlF2.s 			page 20


  31:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  33:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #include <bits/stl_construct.h>
  34:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  35:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  36:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** # include <bits/allocator.h>
  37:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** # include <bits/ptr_traits.h>
  38:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** # include <ext/numeric_traits.h>
  39:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
  40:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  41:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** {
  43:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  45:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  48:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   struct __allocator_traits_base
  49:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   {
  50:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  53:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  58:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   protected:
  59:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  60:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  62:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  64:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  66:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  68:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  70:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  72:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  74:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   };
  76:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  77:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     using __alloc_rebind
  79:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  81:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   /**
  82:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****    * @ingroup allocators
  84:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   */
  85:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
  86:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     {
ARM GAS  /tmp/ccD1zlF2.s 			page 21


  88:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// The allocator type
  89:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  90:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// The allocated type
  91:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
  93:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
  94:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
  96:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
  98:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 100:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     private:
 101:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	struct _Ptr
 104:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{
 105:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	};
 107:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 108:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{
 111:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	};
 113:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 114:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	struct _Diff
 117:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 119:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 123:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 127:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 131:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     public:
 132:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 133:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 135:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 138:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 140:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 141:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 143:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
ARM GAS  /tmp/ccD1zlF2.s 			page 22


 145:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 146:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 148:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 149:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 151:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 154:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 156:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 157:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 158:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 159:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 162:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 164:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 165:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @brief   The allocator's size type
 166:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 167:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 170:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 172:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 173:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 175:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * otherwise @c false_type
 177:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 178:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 181:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 182:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 184:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * otherwise @c false_type
 186:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 187:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 188:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 190:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 191:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 193:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * otherwise @c false_type
 195:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 196:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using propagate_on_container_swap
 197:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 199:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 200:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
ARM GAS  /tmp/ccD1zlF2.s 			page 23


 202:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 205:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using is_always_equal
 206:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 208:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Tp>
 209:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Tp>
 211:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 213:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     private:
 214:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 215:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static constexpr auto
 216:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 220:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 221:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static constexpr pointer
 222:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 225:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	struct __construct_helper
 227:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{
 228:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 229:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	    static true_type __test(int);
 232:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 233:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  template<typename>
 234:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	    static false_type __test(...);
 235:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 236:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	};
 238:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 239:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	using __has_construct
 241:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 243:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 249:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{
 256:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 257:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #else
ARM GAS  /tmp/ccD1zlF2.s 			page 24


 259:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 261:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	}
 262:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 263:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 269:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 270:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 276:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 277:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static constexpr auto
 278:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 280:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 281:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 282:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 283:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static constexpr size_type
 284:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{
 286:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	    / sizeof(value_type);
 290:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	}
 291:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 292:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 293:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static constexpr auto
 294:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 298:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 299:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static constexpr _Alloc2
 300:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ return __a; }
 302:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 303:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     public:
 304:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 305:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 306:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 307:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 308:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 310:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 312:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 315:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
ARM GAS  /tmp/ccD1zlF2.s 			page 25


 316:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 317:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 318:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 319:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *          of type @c value_type
 323:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 324:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 327:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 331:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 332:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 333:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 334:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 337:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 339:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 343:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 344:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 346:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 349:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  arguments @a __args...
 353:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 354:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 362:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 363:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 365:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 367:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 370:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Tp>
 371:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
ARM GAS  /tmp/ccD1zlF2.s 			page 26


 373:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 376:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 377:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 379:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 381:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 384:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 388:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 389:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 393:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 396:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     };
 400:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 401:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus > 201703L
 402:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 404:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 405:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Tp>
 407:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     {
 409:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// The allocator type
 410:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 412:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// The allocated type
 413:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using value_type = _Tp;
 414:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 415:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// The allocator's pointer type.
 416:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using pointer = _Tp*;
 417:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 418:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 419:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 420:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 421:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 422:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using void_pointer = void*;
 423:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 424:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 425:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 426:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 427:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// The allocator's difference type
 428:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
ARM GAS  /tmp/ccD1zlF2.s 			page 27


 430:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// The allocator's size type
 431:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using size_type = std::size_t;
 432:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 433:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 436:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 439:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 440:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 442:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using is_always_equal = true_type;
 444:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 445:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Up>
 446:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 448:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Up>
 449:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 451:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 452:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 453:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 454:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 456:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 458:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 461:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 462:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 463:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 464:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 465:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *          of type @c value_type
 469:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 470:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 472:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       {
 475:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 476:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #else
 478:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	return __a.allocate(__n);
 479:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 480:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       }
 481:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 482:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 483:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 484:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 485:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
ARM GAS  /tmp/ccD1zlF2.s 			page 28


 487:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 488:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 490:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 492:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 494:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 495:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 497:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *	       an object of type `_Up`.
 499:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 501:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 505:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 		  _Args&&... __args)
 509:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{
 511:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 512:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #else
 514:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 516:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	}
 517:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 518:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 519:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 521:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *
 523:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 525:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       template<typename _Up>
 526:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{
 530:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 531:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  __a.destroy(__p);
 532:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #else
 533:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  std::destroy_at(__p);
 534:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 535:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	}
 536:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 537:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 538:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 540:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @return @c __a.max_size()
 541:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 542:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
ARM GAS  /tmp/ccD1zlF2.s 			page 29


 544:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       {
 545:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 546:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	return __a.max_size();
 547:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #else
 548:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 550:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       }
 551:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 552:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       /**
 553:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****        *  @return @c __rhs
 556:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       */
 557:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 559:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       { return __rhs; }
 560:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     };
 561:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 562:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus < 201703L
 563:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 564:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     inline void
 565:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     { __one = __two; }
 567:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 568:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 569:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     inline void
 570:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     { }
 572:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 573:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 574:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 575:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     {
 578:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus >= 201703L
 581:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       if constexpr (__pocca::value)
 582:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	__one = __two;
 583:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #else
 584:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 586:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     }
 587:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 588:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 589:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     constexpr _Alloc
 590:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     {
 592:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 593:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     }
 595:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 596:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus < 201703L
 597:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 598:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 599:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     { __one = std::move(__two); }
 600:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
ARM GAS  /tmp/ccD1zlF2.s 			page 30


 601:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 602:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     { }
 604:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 605:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 606:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 607:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     {
 610:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus >= 201703L
 613:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       if constexpr (__pocma::value)
 614:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	__one = std::move(__two);
 615:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #else
 616:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 618:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     }
 619:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 620:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus < 201703L
 621:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 622:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     {
 624:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       using std::swap;
 625:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       swap(__one, __two);
 626:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     }
 627:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 628:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 629:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     { }
 631:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 632:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 633:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 634:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     {
 637:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus >= 201703L
 640:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       if constexpr (__pocs::value)
 641:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	{
 642:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  using std::swap;
 643:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	  swap(__one, __two);
 644:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	}
 645:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #else
 646:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 648:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     }
 649:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 650:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	   typename = void>
 653:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     : false_type
 655:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     { };
 656:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 657:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
ARM GAS  /tmp/ccD1zlF2.s 			page 31


 658:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     : true_type
 663:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     { };
 664:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 665:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 669:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     struct __is_copy_insertable
 670:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 671:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     { };
 673:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 674:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 675:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Tp>
 676:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 677:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     : is_copy_constructible<_Tp>
 678:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     { };
 679:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 680:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 684:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     struct __is_move_insertable
 685:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     { };
 687:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 688:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 689:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Tp>
 690:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     : is_move_constructible<_Tp>
 692:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     { };
 693:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 694:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     struct __is_allocator : false_type { };
 697:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 698:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 699:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 701:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     : true_type { };
 703:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 704:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 705:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     using _RequireAllocator
 706:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 707:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 708:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
 709:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     using _RequireNotAllocator
 710:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif // C++11
 712:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 713:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   /**
 714:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
ARM GAS  /tmp/ccD1zlF2.s 			page 32


 715:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****    */
 718:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 719:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     void
 721:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	     _Allocator& __alloc)
 723:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     {
 724:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       for (; __first != __last; ++__first)
 725:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #if __cplusplus < 201103L
 726:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #else
 728:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 					      std::__addressof(*__first));
 730:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** #endif
 731:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     }
 732:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h **** 
 733:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 734:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     inline void
 735:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 130              		.loc 5 735 5 is_stmt 1 view .LVU20
 131              		.loc 5 735 5 is_stmt 0 view .LVU21
 132              	.LBE133:
 133              	.LBB134:
 134              	.LBI134:
 333:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 135              		.loc 2 333 7 is_stmt 1 view .LVU22
 136              	.LBB135:
 137              	.LBB136:
 138              	.LBI136:
 350:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 139              		.loc 2 350 7 view .LVU23
 140              	.LBB137:
 353:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 141              		.loc 2 353 2 is_stmt 0 view .LVU24
 142 0006 18B1     		cbz	r0, .L4
 143              	.LVL5:
 144              	.LBB138:
 145              	.LBI138:
 491:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 146              		.loc 5 491 7 is_stmt 1 view .LVU25
 147              	.LBB139:
 148              	.LBB140:
 149              	.LBI140:
  80:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  81:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  84:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       template<typename _Tp1>
  85:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  88:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #if __cplusplus <= 201703L
  89:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  91:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       pointer
ARM GAS  /tmp/ccD1zlF2.s 			page 33


  92:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
  95:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       const_pointer
  96:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #endif
  99:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
 100:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 102:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       {
 105:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	if (__n > this->_M_max_size())
 106:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 107:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
 108:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #if __cpp_aligned_new
 109:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	  {
 111:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	  }
 114:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #endif
 115:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       }
 117:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
 118:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       void
 120:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 150              		.loc 4 120 7 view .LVU26
 151              	.LBE140:
 152              	.LBE139:
 153              	.LBE138:
 154              	.LBE137:
 155              	.LBE136:
 336:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 156              		.loc 2 336 35 is_stmt 0 view .LVU27
 157 0008 A168     		ldr	r1, [r4, #8]
 158              	.LBB146:
 159              	.LBB145:
 160              	.LBB144:
 161              	.LBB143:
 162              	.LBB142:
 163              	.LBB141:
 121:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h ****       {
 122:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #if __cpp_aligned_new
 123:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	  {
 125:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	    ::operator delete(__p,
 126:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** # if __cpp_sized_deallocation
 127:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 			      __t * sizeof(_Tp),
 128:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** # endif
 129:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	    return;
 131:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	  }
 132:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** #endif
 133:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 	::operator delete(__p
ARM GAS  /tmp/ccD1zlF2.s 			page 34


 164              		.loc 4 133 19 view .LVU28
 165 000a 091A     		subs	r1, r1, r0
 166 000c FFF7FEFF 		bl	_ZdlPvj
 167              	.LVL6:
 168              	.L4:
 169              		.loc 4 133 19 view .LVU29
 170              	.LBE141:
 171              	.LBE142:
 172              	.LBE143:
 173              	.LBE144:
 174              	.LBE145:
 175              	.LBE146:
 176              	.LBB147:
 177              	.LBI147:
 128:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 178              		.loc 2 128 14 is_stmt 1 view .LVU30
 179              	.LBB148:
 180              	.LBI148:
 145:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
 146:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 148:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
 150:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #if __cplusplus >= 201103L
 151:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       // Avoid implicit deprecation.
 152:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 153:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #endif
 154:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
 155:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       template<typename _Tp1>
 156:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** 
 159:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       constexpr
 161:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h **** #endif
 162:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 181              		.loc 3 162 7 view .LVU31
 182              	.LBB149:
 183              	.LBI149:
  89:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
 184              		.loc 4 89 7 view .LVU32
  89:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/new_allocator.h **** 
 185              		.loc 4 89 7 is_stmt 0 view .LVU33
 186              	.LBE149:
 187              	.LBE148:
 188              	.LBE147:
 189              	.LBE135:
 190              	.LBE134:
 191              	.LBE131:
 192              	.LBE130:
  19:ImpulseResponse/dsp.cpp **** {
  20:ImpulseResponse/dsp.cpp ****     // No Code Needed
  21:ImpulseResponse/dsp.cpp **** }
 193              		.loc 1 21 1 view .LVU34
 194 0010 2046     		mov	r0, r4
 195 0012 10BD     		pop	{r4, pc}
 196              		.loc 1 21 1 view .LVU35
ARM GAS  /tmp/ccD1zlF2.s 			page 35


 197              		.cfi_endproc
 198              	.LFE1447:
 200              		.global	_ZN7HistoryD1Ev
 201              		.thumb_set _ZN7HistoryD1Ev,_ZN7HistoryD2Ev
 202              		.section	.text._ZN7History20_AdvanceHistoryIndexEj,"ax",%progbits
 203              		.align	1
 204              		.p2align 2,,3
 205              		.global	_ZN7History20_AdvanceHistoryIndexEj
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv5-d16
 211              	_ZN7History20_AdvanceHistoryIndexEj:
 212              	.LVL7:
 213              	.LFB1449:
  22:ImpulseResponse/dsp.cpp **** 
  23:ImpulseResponse/dsp.cpp **** 
  24:ImpulseResponse/dsp.cpp **** void History::_AdvanceHistoryIndex(const size_t bufferSize)
  25:ImpulseResponse/dsp.cpp **** {
 214              		.loc 1 25 1 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
  26:ImpulseResponse/dsp.cpp ****   mHistoryIndex += bufferSize;
 219              		.loc 1 26 3 view .LVU37
 220              		.loc 1 26 17 is_stmt 0 view .LVU38
 221 0000 0369     		ldr	r3, [r0, #16]
 222 0002 1944     		add	r1, r1, r3
 223              	.LVL8:
 224              		.loc 1 26 17 view .LVU39
 225 0004 0161     		str	r1, [r0, #16]
  27:ImpulseResponse/dsp.cpp **** }
 226              		.loc 1 27 1 view .LVU40
 227 0006 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE1449:
 231              		.section	.text._ZN7History14_RewindHistoryEv,"ax",%progbits
 232              		.align	1
 233              		.p2align 2,,3
 234              		.global	_ZN7History14_RewindHistoryEv
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv5-d16
 240              	_ZN7History14_RewindHistoryEv:
 241              	.LVL9:
 242              	.LFB1450:
  28:ImpulseResponse/dsp.cpp **** 
  29:ImpulseResponse/dsp.cpp **** 
  30:ImpulseResponse/dsp.cpp **** void History::_RewindHistory()
  31:ImpulseResponse/dsp.cpp **** {
 243              		.loc 1 31 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
ARM GAS  /tmp/ccD1zlF2.s 			page 36


  32:ImpulseResponse/dsp.cpp ****   // TODO memcpy?  Should be fine w/ history array being >2x the history length.
  33:ImpulseResponse/dsp.cpp ****   for (size_t i = 0, j = mHistoryIndex - mHistoryRequired; i < mHistoryRequired; i++, j++)
 248              		.loc 1 33 3 view .LVU42
  31:ImpulseResponse/dsp.cpp ****   // TODO memcpy?  Should be fine w/ history array being >2x the history length.
 249              		.loc 1 31 1 is_stmt 0 view .LVU43
 250 0000 10B4     		push	{r4}
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 4, -4
 253              	.LBB150:
 254              		.loc 1 33 42 view .LVU44
 255 0002 D0E90341 		ldrd	r4, r1, [r0, #12]
 256              		.loc 1 33 22 view .LVU45
 257 0006 0B1B     		subs	r3, r1, r4
 258              	.LVL10:
 259              		.loc 1 33 62 is_stmt 1 view .LVU46
 260 0008 54B1     		cbz	r4, .L11
 261              	.LBB151:
 262              	.LBB152:
 681:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 682:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 684:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 685:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 686:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 689:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @a __x will not be copied.
 691:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 692:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 694:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector&
 695:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       operator=(const vector& __x);
 696:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 697:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 698:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 699:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 702:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  if the allocators permit it).
 704:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 706:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 708:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector&
 709:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 711:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	constexpr bool __move_storage =
 712:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	return *this;
 716:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 717:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 718:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 719:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
ARM GAS  /tmp/ccD1zlF2.s 			page 37


 720:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 721:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 722:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  initializer list @a __l.
 724:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 725:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  of elements assigned.
 728:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 729:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       vector&
 730:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 732:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 734:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	return *this;
 735:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 736:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 737:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 738:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 739:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 743:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  the number of elements assigned.
 747:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 748:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       void
 749:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 752:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 753:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 755:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 756:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 757:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  range [__first,__last).
 759:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 760:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  of elements assigned.
 763:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 764:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 765:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       template<typename _InputIterator,
 766:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	void
 768:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #else
 771:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       template<typename _InputIterator>
 772:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	void
 773:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	{
 775:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
ARM GAS  /tmp/ccD1zlF2.s 			page 38


 777:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	}
 779:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 780:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 781:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 782:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 783:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 785:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 786:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  initializer list @a __l.
 788:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 789:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  of elements assigned.
 792:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 793:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       void
 794:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 796:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 798:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 799:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 800:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 801:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       using _Base::get_allocator;
 803:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 804:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       // iterators
 805:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 806:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  element order.
 809:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 810:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       iterator
 811:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 814:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 815:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  element order.
 818:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 819:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       const_iterator
 820:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 823:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 824:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  element order.
 827:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 828:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       iterator
 829:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 832:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 833:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
ARM GAS  /tmp/ccD1zlF2.s 			page 39


 834:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  ordinary element order.
 836:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 837:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       const_iterator
 838:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 841:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 842:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  element order.
 845:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 846:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       reverse_iterator
 847:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 849:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 850:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 851:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  reverse element order.
 854:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 855:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       const_reverse_iterator
 856:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 859:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 860:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  in reverse element order.
 863:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 864:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       reverse_iterator
 865:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 867:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 868:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 869:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  is done in reverse element order.
 872:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 873:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       const_reverse_iterator
 874:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 877:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 878:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 879:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  element order.
 882:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 883:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       const_iterator
 884:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       cbegin() const noexcept
 885:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 887:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 888:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  ordinary element order.
ARM GAS  /tmp/ccD1zlF2.s 			page 40


 891:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 892:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       const_iterator
 893:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       cend() const noexcept
 894:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 896:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 897:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  reverse element order.
 900:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 901:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       const_reverse_iterator
 902:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       crbegin() const noexcept
 903:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 905:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 906:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  is done in reverse element order.
 909:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 910:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       const_reverse_iterator
 911:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       crend() const noexcept
 912:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 914:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 915:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       // [23.2.4.2] capacity
 916:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       size_type
 918:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 921:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       size_type
 923:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 926:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 927:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 928:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 931:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  default constructed elements are appended.
 935:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 936:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       void
 937:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       resize(size_type __new_size)
 938:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 939:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	if (__new_size > size())
 940:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	else if (__new_size < size())
 942:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 944:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 945:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 946:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
ARM GAS  /tmp/ccD1zlF2.s 			page 41


 948:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 950:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  given data.
 955:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 956:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       void
 957:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 959:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	if (__new_size > size())
 960:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	else if (__new_size < size())
 962:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 964:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #else
 965:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 966:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
 970:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  given data.
 975:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 976:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       void
 977:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 979:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	if (__new_size > size())
 980:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	else if (__new_size < size())
 982:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       }
 984:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 985:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 986:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 987:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       void
 989:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       shrink_to_fit()
 990:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 991:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** #endif
 992:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 993:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
 994:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 996:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
 997:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       size_type
 998:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
1002:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
1003:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  equal end().)
ARM GAS  /tmp/ccD1zlF2.s 			page 42


1005:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
1006:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return begin() == end(); }
1009:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
1010:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
1011:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *          elements.
1013:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
1014:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
1016:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  thrown.
1020:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
1021:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  and copying of %vector data.
1026:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
1027:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       void
1028:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       reserve(size_type __n);
1029:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
1030:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       // element access
1031:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       /**
1032:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  accessed.
1035:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  @return  Read/write reference to data.
1036:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *
1037:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        *  see at().)
1041:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****        */
1042:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       reference
1043:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
1045:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
 263              		.loc 2 1046 25 is_stmt 0 view .LVU47
 264 000a 0268     		ldr	r2, [r0]
 265 000c 02EB8303 		add	r3, r2, r3, lsl #2
 266              	.LVL11:
 267              		.loc 2 1046 25 view .LVU48
 268 0010 02EB810C 		add	ip, r2, r1, lsl #2
 269              	.LVL12:
 270              	.L12:
 271              		.loc 2 1046 25 view .LVU49
 272              	.LBE152:
 273              	.LBE151:
  34:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 274              		.loc 1 34 5 is_stmt 1 discriminator 2 view .LVU50
 275              	.LBB153:
 276              	.LBI151:
ARM GAS  /tmp/ccD1zlF2.s 			page 43


1043:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 277              		.loc 2 1043 7 discriminator 2 view .LVU51
1043:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 278              		.loc 2 1043 7 is_stmt 0 discriminator 2 view .LVU52
 279              	.LBE153:
 280              		.loc 1 34 17 discriminator 2 view .LVU53
 281 0014 53F8041B 		ldr	r1, [r3], #4	@ float
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 282              		.loc 1 33 62 discriminator 2 view .LVU54
 283 0018 6345     		cmp	r3, ip
 284              		.loc 1 34 17 discriminator 2 view .LVU55
 285 001a 42F8041B 		str	r1, [r2], #4	@ float
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 286              		.loc 1 33 3 is_stmt 1 discriminator 2 view .LVU56
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 287              		.loc 1 33 62 discriminator 2 view .LVU57
 288 001e F9D1     		bne	.L12
 289              	.L11:
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 290              		.loc 1 33 62 is_stmt 0 discriminator 2 view .LVU58
 291              	.LBE150:
  35:ImpulseResponse/dsp.cpp ****   mHistoryIndex = mHistoryRequired;
 292              		.loc 1 35 3 is_stmt 1 view .LVU59
 293              		.loc 1 35 17 is_stmt 0 view .LVU60
 294 0020 0461     		str	r4, [r0, #16]
  36:ImpulseResponse/dsp.cpp **** }
 295              		.loc 1 36 1 view .LVU61
 296 0022 5DF8044B 		ldr	r4, [sp], #4
 297              		.cfi_restore 4
 298              		.cfi_def_cfa_offset 0
 299 0026 7047     		bx	lr
 300              		.cfi_endproc
 301              	.LFE1450:
 303              		.section	.text._ZN7History14_UpdateHistoryEf,"ax",%progbits
 304              		.align	1
 305              		.p2align 2,,3
 306              		.global	_ZN7History14_UpdateHistoryEf
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN7History14_UpdateHistoryEf:
 313              	.LVL13:
 314              	.LFB1451:
  37:ImpulseResponse/dsp.cpp **** 
  38:ImpulseResponse/dsp.cpp **** void History::_UpdateHistory(float inputs)
  39:ImpulseResponse/dsp.cpp **** {
 315              		.loc 1 39 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
  40:ImpulseResponse/dsp.cpp ****   if (mHistoryIndex + 1 >= mHistory.size())
 320              		.loc 1 40 3 view .LVU63
 321              		.loc 1 40 7 is_stmt 0 view .LVU64
 322 0000 0269     		ldr	r2, [r0, #16]
 323              	.LVL14:
ARM GAS  /tmp/ccD1zlF2.s 			page 44


 324              	.LBB154:
 325              	.LBI154:
 918:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 326              		.loc 2 918 7 is_stmt 1 view .LVU65
 327              	.LBE154:
  39:ImpulseResponse/dsp.cpp ****   if (mHistoryIndex + 1 >= mHistory.size())
 328              		.loc 1 39 1 is_stmt 0 view .LVU66
 329 0002 30B4     		push	{r4, r5}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 4, -8
 332              		.cfi_offset 5, -4
 333              	.LBB157:
 334              	.LBB155:
 919:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 335              		.loc 2 919 50 view .LVU67
 336 0004 D0E90043 		ldrd	r4, r3, [r0]
 337              	.LBE155:
 338              	.LBE157:
 339              		.loc 1 40 21 view .LVU68
 340 0008 511C     		adds	r1, r2, #1
 341              	.LBB158:
 342              	.LBB156:
 919:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h **** 
 343              		.loc 2 919 50 view .LVU69
 344 000a 1B1B     		subs	r3, r3, r4
 345              	.LBE156:
 346              	.LBE158:
 347              		.loc 1 40 3 view .LVU70
 348 000c B1EBA30F 		cmp	r1, r3, asr #2
 349 0010 0FD3     		bcc	.L19
  41:ImpulseResponse/dsp.cpp ****     _RewindHistory();
 350              		.loc 1 41 5 is_stmt 1 view .LVU71
 351              	.LVL15:
 352              	.LBB159:
 353              	.LBI159:
  30:ImpulseResponse/dsp.cpp **** {
 354              		.loc 1 30 6 view .LVU72
 355              	.LBB160:
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 356              		.loc 1 33 3 view .LVU73
 357              	.LBB161:
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 358              		.loc 1 33 42 is_stmt 0 view .LVU74
 359 0012 C568     		ldr	r5, [r0, #12]
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 360              		.loc 1 33 22 view .LVU75
 361 0014 531B     		subs	r3, r2, r5
 362              	.LVL16:
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 363              		.loc 1 33 62 is_stmt 1 view .LVU76
 364 0016 55B1     		cbz	r5, .L21
 365 0018 04EB8303 		add	r3, r4, r3, lsl #2
 366              	.LVL17:
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 367              		.loc 1 33 62 is_stmt 0 view .LVU77
 368 001c 2146     		mov	r1, r4
 369 001e 04EB8202 		add	r2, r4, r2, lsl #2
ARM GAS  /tmp/ccD1zlF2.s 			page 45


 370              	.LVL18:
 371              	.L22:
  34:ImpulseResponse/dsp.cpp ****   mHistoryIndex = mHistoryRequired;
 372              		.loc 1 34 5 is_stmt 1 view .LVU78
  34:ImpulseResponse/dsp.cpp ****   mHistoryIndex = mHistoryRequired;
 373              		.loc 1 34 17 is_stmt 0 view .LVU79
 374 0022 53F804CB 		ldr	ip, [r3], #4	@ float
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 375              		.loc 1 33 62 view .LVU80
 376 0026 9A42     		cmp	r2, r3
  34:ImpulseResponse/dsp.cpp ****   mHistoryIndex = mHistoryRequired;
 377              		.loc 1 34 17 view .LVU81
 378 0028 41F804CB 		str	ip, [r1], #4	@ float
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 379              		.loc 1 33 3 is_stmt 1 view .LVU82
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 380              		.loc 1 33 62 view .LVU83
 381 002c F9D1     		bne	.L22
 382              	.L21:
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 383              		.loc 1 33 62 is_stmt 0 view .LVU84
 384              	.LBE161:
  35:ImpulseResponse/dsp.cpp **** }
 385              		.loc 1 35 3 is_stmt 1 view .LVU85
 386              	.LBB162:
  33:ImpulseResponse/dsp.cpp ****     mHistory[i] = mHistory[j];
 387              		.loc 1 33 42 is_stmt 0 view .LVU86
 388 002e 2A46     		mov	r2, r5
 389              	.LBE162:
  35:ImpulseResponse/dsp.cpp **** }
 390              		.loc 1 35 17 view .LVU87
 391 0030 0561     		str	r5, [r0, #16]
 392              	.LVL19:
 393              	.L19:
  35:ImpulseResponse/dsp.cpp **** }
 394              		.loc 1 35 17 view .LVU88
 395              	.LBE160:
 396              	.LBE159:
  42:ImpulseResponse/dsp.cpp **** 
  43:ImpulseResponse/dsp.cpp ****   mHistory[mHistoryIndex] = inputs;
 397              		.loc 1 43 3 is_stmt 1 view .LVU89
 398              	.LBB163:
 399              	.LBI163:
1043:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 400              		.loc 2 1043 7 view .LVU90
1043:/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/stl_vector.h ****       {
 401              		.loc 2 1043 7 is_stmt 0 view .LVU91
 402              	.LBE163:
 403              		.loc 1 43 27 view .LVU92
 404 0032 04EB8202 		add	r2, r4, r2, lsl #2
  44:ImpulseResponse/dsp.cpp **** }
 405              		.loc 1 44 1 view .LVU93
 406 0036 30BC     		pop	{r4, r5}
 407              		.cfi_restore 5
 408              		.cfi_restore 4
 409              		.cfi_def_cfa_offset 0
  43:ImpulseResponse/dsp.cpp **** }
ARM GAS  /tmp/ccD1zlF2.s 			page 46


 410              		.loc 1 43 27 view .LVU94
 411 0038 82ED000A 		vstr.32	s0, [r2]
 412              		.loc 1 44 1 view .LVU95
 413 003c 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE1451:
 417 003e 00BF     		.text
 418              	.Letext0:
 419              		.file 6 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath
 420              		.file 7 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits/
 421              		.file 8 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/include/s
 422              		.file 9 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/type_
 423              		.file 10 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/arm-
 424              		.file 11 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits
 425              		.file 12 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/debu
 426              		.file 13 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits
 427              		.file 14 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits
 428              		.file 15 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits
 429              		.file 16 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/bits
 430              		.file 17 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/ext/
 431              		.file 18 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/math.h"
 432              		.file 19 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/math
 433              		.file 20 "ImpulseResponse/dsp.h"
 434              		.file 21 "<built-in>"
 435              		.file 22 "/home/green/bin/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/new"
ARM GAS  /tmp/ccD1zlF2.s 			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 dsp.cpp
     /tmp/ccD1zlF2.s:17     .text._ZN7HistoryC2Ev:0000000000000000 $t
     /tmp/ccD1zlF2.s:26     .text._ZN7HistoryC2Ev:0000000000000000 _ZN7HistoryC2Ev
     /tmp/ccD1zlF2.s:26     .text._ZN7HistoryC2Ev:0000000000000000 _ZN7HistoryC1Ev
     /tmp/ccD1zlF2.s:92     .text._ZN7HistoryD2Ev:0000000000000000 $t
     /tmp/ccD1zlF2.s:100    .text._ZN7HistoryD2Ev:0000000000000000 _ZN7HistoryD2Ev
     /tmp/ccD1zlF2.s:100    .text._ZN7HistoryD2Ev:0000000000000000 _ZN7HistoryD1Ev
     /tmp/ccD1zlF2.s:203    .text._ZN7History20_AdvanceHistoryIndexEj:0000000000000000 $t
     /tmp/ccD1zlF2.s:211    .text._ZN7History20_AdvanceHistoryIndexEj:0000000000000000 _ZN7History20_AdvanceHistoryIndexEj
     /tmp/ccD1zlF2.s:232    .text._ZN7History14_RewindHistoryEv:0000000000000000 $t
     /tmp/ccD1zlF2.s:240    .text._ZN7History14_RewindHistoryEv:0000000000000000 _ZN7History14_RewindHistoryEv
     /tmp/ccD1zlF2.s:304    .text._ZN7History14_UpdateHistoryEf:0000000000000000 $t
     /tmp/ccD1zlF2.s:312    .text._ZN7History14_UpdateHistoryEf:0000000000000000 _ZN7History14_UpdateHistoryEf

UNDEFINED SYMBOLS
_ZdlPvj
